{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for GoogleCloudPlatformResourceManager"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "GoogleCloudPlatformResourceManager",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-gcp-rm",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "GCPResourceManagerLogsCCPDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "GCPResourceManagerLogsCCPDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Google Cloud Platform Resource Manager",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "GCPResourceManagerLogsCCPDefinition",
                  "title": "Google Cloud Platform Resource Manager",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The Google Cloud Platform Resource Manager data connector provides the capability to ingest Resource Manager [Admin Activity and Data Access Audit logs](https://cloud.google.com/resource-manager/docs/audit-logging) into Microsoft Sentinel using the Cloud Resource Manager API. Refer the [Product overview](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy) document for more details.",
                  "graphQueriesTableName": "GCP_ResourceManager_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total events received",
                      "legend": "GCP RM Audit Logs",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of GCP RM Audit logs",
                      "query": "{{graphQueriesTableName}}\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "MarkdownControlEnvBased",
                          "parameters": {
                            "prodScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-gudivya/GCP-RM/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-gudivya/GCP-RM/tree/main/GCP-RM)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation/GCPInitialAuthenticationSetup)",
                            "govScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-gudivya/GCP-RM/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-gudivya/GCP-RM/tree/main/GCP-RM)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation_gov/GCPInitialAuthenticationSetupGov)"
                          }
                        },
                        {
                          "type": "CopyableLabel",
                          "parameters": {
                            "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                            "fillWith": [
                              "TenantId"
                            ],
                            "name": "TenantId",
                            "disabled": true
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Enable Resource Manager logs \n In the Google Cloud Console, enable cloud resource manager API if not enabled previously, and save the changes. Make sure to have organization level IAM permissions for your account to see all logs in the resource hierarchy. You can refer the document links for different IAM permissions for access control with IAM at each level provided in this [link](https://cloud.google.com/resource-manager/docs/how-to)"
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 3. Connect new collectors \n To enable GCP Resource Manager Logs for Microsoft Sentinel, click on Add new collector button, provide the required information in the pop up and click on Connect."
                          }
                        },
                        {
                          "type": "GCPGrid",
                          "parameters": {}
                        },
                        {
                          "type": "GCPContextPane",
                          "parameters": {}
                        }
                      ],
                      "title": "Connect GCP Resource Manager to Microsoft Sentinel\n"
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "GCPResourceManagerDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-GCPResourceManager": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "protoPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "operation",
                        "type": "dynamic"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-GCPResourceManager"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | extend ProtoPayload = parse_json(protoPayload) | extend Resource = parse_json(resource) | extend Operation = parse_json(operation) | extend TimeGenerated = timestamp, InsertID = insertId, LogName = logName, ReceiveTimestamp = receiveTimestamp, Severity = severity, Timestamp = timestamp, PayloadType = tostring(ProtoPayload['@type']), MethodName = tostring(ProtoPayload['methodName']), ResourceName = tostring(ProtoPayload['resourceName']), ServiceName = tostring(ProtoPayload['serviceName']), NumResponseItems = tostring(ProtoPayload['numResponseItems']), AuthenticationInfoPrincipalEmail = tostring(ProtoPayload['authenticationInfo']['principalEmail']), AuthenticationInfoPrincipalSubject = tostring(ProtoPayload['authenticationInfo']['principalSubject']), AuthenticationInfoServiceAccountKeyName = tostring(ProtoPayload['authenticationInfo']['serviceAccountKeyName']), AuthorizationInfo = tostring(ProtoPayload['authorizationInfo']), Status = tostring(ProtoPayload['status']), MetadataType = tostring(ProtoPayload['metadata']['@type']), MetadataParentDeltaDestinationParentId = todouble(ProtoPayload['metadata']['parentDelta']['destinationParent']['id']), MetadataParentDeltaDestinationParentType = tostring(ProtoPayload['metadata']['parentDelta']['destinationParent']['type']), MetadataParentDeltaSourceParentId = todouble(ProtoPayload['metadata']['parentDelta']['sourceParent']['id']), MetadataParentDeltaSourceParentType = tostring(ProtoPayload['metadata']['parentDelta']['sourceParent']['type']), RequestType = tostring(ProtoPayload['request']['@type']), RequestResource = tostring(ProtoPayload['request']['resource']), RequestName = tostring(ProtoPayload['request']['name']), RequestCreateTime = todatetime(ProtoPayload['request']['createTime']), RequestLifecycleState = tostring(ProtoPayload['request']['lifecycleState']), RequestProjectId = tostring(ProtoPayload['request']['projectId']), RequestParent = tostring(ProtoPayload['request']['parent']), RequestListValue = tostring(ProtoPayload['request']['listValue']), RequestPageSize = todouble(ProtoPayload['request']['pageSize']), RequestCustomConstraint = tostring(ProtoPayload['request']['customConstraint']), RequestDestinationParent = tostring(ProtoPayload['request']['destinationParent']), RequestUpdateMask = tostring(ProtoPayload['request']['updateMask']), RequestConstraint = tostring(ProtoPayload['request']['constraint']), RequestQuery = tostring(ProtoPayload['request']['query']), RequestPolicyAuditConfigs = tostring(ProtoPayload['request']['policy']['auditConfigs']), RequestPolicyBindings = tostring(ProtoPayload['request']['policy']['bindings']), RequestPolicyEtag = tostring(ProtoPayload['request']['policy']['etag']), RequestPolicyName = tostring(ProtoPayload['request']['policy']['name']), RequestPolicySpec = tostring(ProtoPayload['request']['policy']['spec']), RequestOptionsRequestedPolicyVersion = todouble(ProtoPayload['request']['options']['requestedPolicyVersion']), RequestProjectName = tostring(ProtoPayload['request']['project']['name']), RequestProjectProjectId = tostring(ProtoPayload['request']['project']['projectId']), RequestProjectProjectNumber = todouble(ProtoPayload['request']['project']['projectNumber']), RequestProjectLifecycleState = tostring(ProtoPayload['request']['project']['lifecycleState']), RequestProjectCreateTime = todatetime(ProtoPayload['request']['project']['createTime']), RequestProjectLabels = tostring(ProtoPayload['request']['project']['labels']), RequestProjectParent = tostring(ProtoPayload['request']['project']['parent']), RequestFolderDisplayName = tostring(ProtoPayload['request']['folder']['displayName']), RequestFolderParent = tostring(ProtoPayload['request']['folder']['parent']), RequestTagValueName = tostring(ProtoPayload['request']['tagValue']['name']), RequestTagKeyName = tostring(ProtoPayload['request']['tagKey']['name']), RequestTagBindingTagValue = tostring(ProtoPayload['request']['tagBinding']['tagValue']), RequestTagBindingParent = tostring(ProtoPayload['request']['tagBinding']['parent']), RequestMetadataCallerIP = tostring(ProtoPayload['requestMetadata']['callerIp']), RequestMetadataCallerSuppliedUserAgent = tostring(ProtoPayload['requestMetadata']['callerSuppliedUserAgent']), RequestMetadataDestinationAttributes = tostring(ProtoPayload['requestMetadata']['destinationAttributes']), RequestMetadataRequestAttributesAuth = tostring(ProtoPayload['requestMetadata']['requestAttributes']['auth']), RequestMetadataRequestAttributesTime = todatetime(ProtoPayload['requestMetadata']['requestAttributes']['time']), RequestMetadataRequestAttributesReason = tostring(ProtoPayload['requestMetadata']['requestAttributes']['reason']), ResponseType = tostring(ProtoPayload['response']['@type']), ResponseAuditConfigs = tostring(ProtoPayload['response']['auditConfigs']), ResponseBindings = tostring(ProtoPayload['response']['bindings']), ResponseEtag = tostring(ProtoPayload['response']['etag']), ResponseCreateTime = todatetime(ProtoPayload['response']['createTime']), ResponseDisplayName = tostring(ProtoPayload['response']['displayName']), ResponseName = tostring(ProtoPayload['response']['name']), ResponseParent = tostring(ProtoPayload['response']['parent']), ResponseState = tostring(ProtoPayload['response']['state']), ResponseUpdateTime = todatetime(ProtoPayload['response']['updateTime']), ResponseLifecycleState = tostring(ProtoPayload['response']['lifecycleState']), ResponseProjectId = tostring(ProtoPayload['response']['projectId']), ResponseProjectNumber = todouble(ProtoPayload['response']['projectNumber']), ResponseLabels = tostring(ProtoPayload['response']['labels']), ResponseDescription = tostring(ProtoPayload['response']['description']), ResponseNamespacedName = tostring(ProtoPayload['response']['namespacedName']), ResponseShortName = tostring(ProtoPayload['response']['shortName']), ResponseTagKey = tostring(ProtoPayload['response']['tagKey']), ResponseTagValue = tostring(ProtoPayload['response']['tagValue']), ResponseTagValueNamespacedName = tostring(ProtoPayload['response']['tagValueNamespacedName']), ResponsePolicySpec = tostring(ProtoPayload['response']['policy']['spec']), ServiceDataType = tostring(ProtoPayload['serviceData']['@type']), ServiceDataPolicyDeltaBindingDeltas = tostring(ProtoPayload['serviceData']['policyDelta']['bindingDeltas']), ResourceType = tostring(Resource['type']), ResourceLabelsOrganizationId = todouble(Resource['labels']['organization_id']), ResourceLabelsFolderId = todouble(Resource['labels']['folder_id']), ResourceLabelsProjectId = tostring(Resource['labels']['project_id']), ResourceLabelsMethod = tostring(Resource['labels']['method']), ResourceLabelsService = tostring(Resource['labels']['service']), OperationFirst = tobool(Operation['first']), OperationLast = tobool(Operation['last']), OperationID = tostring(Operation['id']), OperationProducer = tostring(Operation['producer']) | project TimeGenerated, InsertID, LogName, ReceiveTimestamp, Severity, Timestamp, PayloadType, MethodName, ResourceName, ServiceName, NumResponseItems, AuthenticationInfoPrincipalEmail, AuthenticationInfoPrincipalSubject, AuthenticationInfoServiceAccountKeyName, AuthorizationInfo, Status, MetadataType, MetadataParentDeltaDestinationParentId, MetadataParentDeltaDestinationParentType, MetadataParentDeltaSourceParentId, MetadataParentDeltaSourceParentType, RequestType, RequestResource, RequestName, RequestCreateTime, RequestLifecycleState, RequestProjectId, RequestParent, RequestListValue, RequestPageSize, RequestCustomConstraint, RequestDestinationParent, RequestUpdateMask, RequestConstraint, RequestQuery, RequestPolicyAuditConfigs, RequestPolicyBindings, RequestPolicyEtag, RequestPolicyName, RequestPolicySpec, RequestOptionsRequestedPolicyVersion, RequestProjectName, RequestProjectProjectId, RequestProjectProjectNumber, RequestProjectLifecycleState, RequestProjectCreateTime, RequestProjectLabels, RequestProjectParent, RequestFolderDisplayName, RequestFolderParent, RequestTagValueName, RequestTagKeyName, RequestTagBindingTagValue, RequestTagBindingParent, RequestMetadataCallerIP, RequestMetadataCallerSuppliedUserAgent, RequestMetadataDestinationAttributes, RequestMetadataRequestAttributesAuth, RequestMetadataRequestAttributesTime, RequestMetadataRequestAttributesReason, ResponseType, ResponseAuditConfigs, ResponseBindings, ResponseEtag, ResponseCreateTime, ResponseDisplayName, ResponseName, ResponseParent, ResponseState, ResponseUpdateTime, ResponseLifecycleState, ResponseProjectId, ResponseProjectNumber, ResponseLabels, ResponseDescription, ResponseNamespacedName, ResponseShortName, ResponseTagKey, ResponseTagValue, ResponseTagValueNamespacedName, ResponsePolicySpec, ServiceDataType, ServiceDataPolicyDeltaBindingDeltas, ResourceType, ResourceLabelsOrganizationId, ResourceLabelsFolderId, ResourceLabelsProjectId, ResourceLabelsMethod, ResourceLabelsService, OperationFirst, OperationLast, OperationID, OperationProducer",
                    "outputStream": "Custom-GCP_ResourceManager_CL"
                  }
                ]
              }
            },
            {
              "name": "GCP_ResourceManager_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "GCP_ResourceManager_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "InsertID",
                      "type": "string"
                    },
                    {
                      "name": "LogName",
                      "type": "string"
                    },
                    {
                      "name": "ReceiveTimestamp",
                      "type": "datetime"
                    },
                    {
                      "name": "Severity",
                      "type": "string"
                    },
                    {
                      "name": "Timestamp",
                      "type": "datetime"
                    },
                    {
                      "name": "PayloadType",
                      "type": "string"
                    },
                    {
                      "name": "MethodName",
                      "type": "string"
                    },
                    {
                      "name": "ResourceName",
                      "type": "string"
                    },
                    {
                      "name": "ServiceName",
                      "type": "string"
                    },
                    {
                      "name": "NumResponseItems",
                      "type": "string"
                    },
                    {
                      "name": "AuthenticationInfoPrincipalEmail",
                      "type": "string"
                    },
                    {
                      "name": "AuthenticationInfoPrincipalSubject",
                      "type": "string"
                    },
                    {
                      "name": "AuthenticationInfoServiceAccountKeyName",
                      "type": "string"
                    },
                    {
                      "name": "AuthorizationInfo",
                      "type": "string"
                    },
                    {
                      "name": "Status",
                      "type": "string"
                    },
                    {
                      "name": "MetadataType",
                      "type": "string"
                    },
                    {
                      "name": "MetadataParentDeltaDestinationParentId",
                      "type": "real"
                    },
                    {
                      "name": "MetadataParentDeltaDestinationParentType",
                      "type": "string"
                    },
                    {
                      "name": "MetadataParentDeltaSourceParentId",
                      "type": "real"
                    },
                    {
                      "name": "MetadataParentDeltaSourceParentType",
                      "type": "string"
                    },
                    {
                      "name": "RequestType",
                      "type": "string"
                    },
                    {
                      "name": "RequestResource",
                      "type": "string"
                    },
                    {
                      "name": "RequestName",
                      "type": "string"
                    },
                    {
                      "name": "RequestCreateTime",
                      "type": "datetime"
                    },
                    {
                      "name": "RequestLifecycleState",
                      "type": "string"
                    },
                    {
                      "name": "RequestProjectId",
                      "type": "string"
                    },
                    {
                      "name": "RequestParent",
                      "type": "string"
                    },
                    {
                      "name": "RequestListValue",
                      "type": "string"
                    },
                    {
                      "name": "RequestPageSize",
                      "type": "real"
                    },
                    {
                      "name": "RequestCustomConstraint",
                      "type": "string"
                    },
                    {
                      "name": "RequestDestinationParent",
                      "type": "string"
                    },
                    {
                      "name": "RequestUpdateMask",
                      "type": "string"
                    },
                    {
                      "name": "RequestConstraint",
                      "type": "string"
                    },
                    {
                      "name": "RequestQuery",
                      "type": "string"
                    },
                    {
                      "name": "RequestPolicyAuditConfigs",
                      "type": "string"
                    },
                    {
                      "name": "RequestPolicyBindings",
                      "type": "string"
                    },
                    {
                      "name": "RequestPolicyEtag",
                      "type": "string"
                    },
                    {
                      "name": "RequestPolicyName",
                      "type": "string"
                    },
                    {
                      "name": "RequestPolicySpec",
                      "type": "string"
                    },
                    {
                      "name": "RequestOptionsRequestedPolicyVersion",
                      "type": "real"
                    },
                    {
                      "name": "RequestProjectName",
                      "type": "string"
                    },
                    {
                      "name": "RequestProjectProjectId",
                      "type": "string"
                    },
                    {
                      "name": "RequestProjectProjectNumber",
                      "type": "real"
                    },
                    {
                      "name": "RequestProjectLifecycleState",
                      "type": "string"
                    },
                    {
                      "name": "RequestProjectCreateTime",
                      "type": "datetime"
                    },
                    {
                      "name": "RequestProjectLabels",
                      "type": "string"
                    },
                    {
                      "name": "RequestProjectParent",
                      "type": "string"
                    },
                    {
                      "name": "RequestFolderDisplayName",
                      "type": "string"
                    },
                    {
                      "name": "RequestFolderParent",
                      "type": "string"
                    },
                    {
                      "name": "RequestTagValueName",
                      "type": "string"
                    },
                    {
                      "name": "RequestTagKeyName",
                      "type": "string"
                    },
                    {
                      "name": "RequestTagBindingTagValue",
                      "type": "string"
                    },
                    {
                      "name": "RequestTagBindingParent",
                      "type": "string"
                    },
                    {
                      "name": "RequestMetadataCallerIP",
                      "type": "string"
                    },
                    {
                      "name": "RequestMetadataCallerSuppliedUserAgent",
                      "type": "string"
                    },
                    {
                      "name": "RequestMetadataDestinationAttributes",
                      "type": "string"
                    },
                    {
                      "name": "RequestMetadataRequestAttributesAuth",
                      "type": "string"
                    },
                    {
                      "name": "RequestMetadataRequestAttributesTime",
                      "type": "datetime"
                    },
                    {
                      "name": "RequestMetadataRequestAttributesReason",
                      "type": "string"
                    },
                    {
                      "name": "ResponseType",
                      "type": "string"
                    },
                    {
                      "name": "ResponseAuditConfigs",
                      "type": "string"
                    },
                    {
                      "name": "ResponseBindings",
                      "type": "string"
                    },
                    {
                      "name": "ResponseEtag",
                      "type": "string"
                    },
                    {
                      "name": "ResponseCreateTime",
                      "type": "datetime"
                    },
                    {
                      "name": "ResponseDisplayName",
                      "type": "string"
                    },
                    {
                      "name": "ResponseName",
                      "type": "string"
                    },
                    {
                      "name": "ResponseParent",
                      "type": "string"
                    },
                    {
                      "name": "ResponseState",
                      "type": "string"
                    },
                    {
                      "name": "ResponseUpdateTime",
                      "type": "datetime"
                    },
                    {
                      "name": "ResponseLifecycleState",
                      "type": "string"
                    },
                    {
                      "name": "ResponseProjectId",
                      "type": "string"
                    },
                    {
                      "name": "ResponseProjectNumber",
                      "type": "real"
                    },
                    {
                      "name": "ResponseLabels",
                      "type": "string"
                    },
                    {
                      "name": "ResponseDescription",
                      "type": "string"
                    },
                    {
                      "name": "ResponseNamespacedName",
                      "type": "string"
                    },
                    {
                      "name": "ResponseShortName",
                      "type": "string"
                    },
                    {
                      "name": "ResponseTagKey",
                      "type": "string"
                    },
                    {
                      "name": "ResponseTagValue",
                      "type": "string"
                    },
                    {
                      "name": "ResponseTagValueNamespacedName",
                      "type": "string"
                    },
                    {
                      "name": "ResponsePolicySpec",
                      "type": "string"
                    },
                    {
                      "name": "ServiceDataType",
                      "type": "string"
                    },
                    {
                      "name": "ServiceDataPolicyDeltaBindingDeltas",
                      "type": "string"
                    },
                    {
                      "name": "ResourceType",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsOrganizationId",
                      "type": "real"
                    },
                    {
                      "name": "ResourceLabelsFolderId",
                      "type": "real"
                    },
                    {
                      "name": "ResourceLabelsProjectId",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsMethod",
                      "type": "string"
                    },
                    {
                      "name": "ResourceLabelsService",
                      "type": "string"
                    },
                    {
                      "name": "OperationFirst",
                      "type": "boolean"
                    },
                    {
                      "name": "OperationLast",
                      "type": "boolean"
                    },
                    {
                      "name": "OperationID",
                      "type": "string"
                    },
                    {
                      "name": "OperationProducer",
                      "type": "string"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "GCPResourceManagerLogsCCPDefinition",
          "title": "Google Cloud Platform Resource Manager",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The Google Cloud Platform Resource Manager data connector provides the capability to ingest Resource Manager [Admin Activity and Data Access Audit logs](https://cloud.google.com/resource-manager/docs/audit-logging) into Microsoft Sentinel using the Cloud Resource Manager API. Refer the [Product overview](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy) document for more details.",
          "graphQueriesTableName": "GCP_ResourceManager_CL",
          "graphQueries": [
            {
              "metricName": "Total events received",
              "legend": "GCP RM Audit Logs",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of GCP RM Audit logs",
              "query": "{{graphQueriesTableName}}\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "MarkdownControlEnvBased",
                  "parameters": {
                    "prodScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-gudivya/GCP-RM/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-gudivya/GCP-RM/tree/main/GCP-RM)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation/GCPInitialAuthenticationSetup)",
                    "govScript": "#### 1. Setup the GCP environment \n Ensure to have the following resources from the GCP Console:\n Project ID, Project Name, GCP Subscription name for the project, Workload Identity Pool ID, Workspace Identity Provider ID, and a Service Account to establish the connection.\n For more information, refer the [Connector tutorial](https://github.com/v-gudivya/GCP-RM/blob/main/README.md) for log setup and authentication setup tutorial.\n\n Find the Log set up script [**here**](https://github.com/v-gudivya/GCP-RM/tree/main/GCP-RM)\n & the Authentication set up script [**here**](https://github.com/Azure/Azure-Sentinel/tree/master/DataConnectors/GCP/Terraform/sentinel_resources_creation_gov/GCPInitialAuthenticationSetupGov)"
                  }
                },
                {
                  "type": "CopyableLabel",
                  "parameters": {
                    "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                    "fillWith": [
                      "TenantId"
                    ],
                    "name": "TenantId",
                    "disabled": true
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Enable Resource Manager logs \n In the Google Cloud Console, enable cloud resource manager API if not enabled previously, and save the changes. Make sure to have organization level IAM permissions for your account to see all logs in the resource hierarchy. You can refer the document links for different IAM permissions for access control with IAM at each level provided in this [link](https://cloud.google.com/resource-manager/docs/how-to)"
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 3. Connect new collectors \n To enable GCP Resource Manager Logs for Microsoft Sentinel, click on Add new collector button, provide the required information in the pop up and click on Connect."
                  }
                },
                {
                  "type": "GCPGrid",
                  "parameters": {}
                },
                {
                  "type": "GCPContextPane",
                  "parameters": {}
                }
              ],
              "title": "Connect GCP Resource Manager to Microsoft Sentinel\n"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "tier": "Microsoft",
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Google Cloud Platform Resource Manager",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "GCPServiceAccountEmail": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectNumber": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            },
            "GCPWorkloadIdentityProviderId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPSubscriptionName": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 3
            },
            "connectorDefinitionName": {
              "defaultValue": "Google Cloud Platform Resource Manager",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "tier": "Microsoft",
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "link": "https://support.microsoft.com/"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GCPResourceManagerLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GCPResourceManagerLogsCCPDefinition",
                "dataType": "GCP_ResourceManager_CL",
                "dcrConfig": {
                  "streamName": "Custom-GCPResourceManager",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "GoogleCloudPlatformResourceManager",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/GoogleCloudPlatformResourceManager/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The Google Cloud Platform Resource Manager solution provides the capability to ingest <a href=\"https://cloud.google.com/resource-manager/docs/audit-logging\">Admin Activity and Data Access Audit logs</a> into Microsoft Sentinel using the GCP Cloud Resource Manager API and GCP Logging API.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs</p>\n<ol type=\"a\">\n<li><a href=\"https://learn.microsoft.com/en-us/azure/sentinel/create-codeless-connector\">Codeless Connector Platform (CCP)</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/google_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "GoogleCloudPlatformResourceManager",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2025-03-07",
        "providers": [
          "Google"
        ],
        "categories": {
          "domains": [
            "Cloud Provider",
            "Security"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
